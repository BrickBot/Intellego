bash-2.05$ java GBN1 
Program parameters : please enter all , seperated by spaces.
Note ; all weights are entered as doubles
Enter : k (int), maxCycles (int), learning rate (double),
output tolerance(double), momentum (double),
weighti1->o1, weighti2->o1, weighti3->o1, weight ib->o1
1000 100000 0.1 0.04 0.1 0 0 0 0        (<-- note length of training it took!)
using k = 1000
using maxCycles = 100000
using learningRate = 0.1
using outputTolerance = 0.04
using momentumFactor = 0.1
using Weight i1->o : 0.0
using Weight i2->o : 0.0
using Weight i3->o : 0.0
using Weight ib->o : 0.0
Cycle	(P1)Target-Out	(P2)Target-Out	(P3)Target-Out	(P4)Target-Out	SumErrSquared

0	0.5000		0.2500		0.7500		0.2500		0.0000
1000	0.0137		-0.1963		0.2911		-0.1292		0.0043
2000	-0.0052		-0.1913		0.2765		-0.0972		0.0037
3000	-0.0132		-0.1831		0.2621		-0.0818		0.0033
4000	-0.0166		-0.1739		0.2483		-0.0732		0.0030
5000	-0.0180		-0.1647		0.2352		-0.0678		0.0026
6000	-0.0185		-0.1558		0.2228		-0.0637		0.0024
7000	-0.0185		-0.1473		0.2112		-0.0603		0.0021
8000	-0.0183		-0.1392		0.2003		-0.0573		0.0019
9000	-0.0180		-0.1317		0.1901		-0.0546		0.0017
10000	-0.0176		-0.1245		0.1805		-0.0520		0.0015
11000	-0.0172		-0.1178		0.1716		-0.0496		0.0013
12000	-0.0168		-0.1115		0.1632		-0.0473		0.0012
13000	-0.0164		-0.1057		0.1553		-0.0452		0.0010
14000	-0.0159		-0.1001		0.1480		-0.0431		0.0009
15000	-0.0155		-0.0949		0.1410		-0.0412		0.0008
16000	-0.0151		-0.0900		0.1345		-0.0394		0.0008
17000	-0.0147		-0.0855		0.1284		-0.0376		0.0007
18000	-0.0143		-0.0812		0.1227		-0.0360		0.0006
19000	-0.0139		-0.0771		0.1172		-0.0344		0.0005
20000	-0.0135		-0.0733		0.1121		-0.0329		0.0005
21000	-0.0131		-0.0697		0.1073		-0.0315		0.0004
22000	-0.0128		-0.0663		0.1027		-0.0302		0.0004
23000	-0.0124		-0.0631		0.0983		-0.0290		0.0004
24000	-0.0121		-0.0601		0.0942		-0.0278		0.0003
25000	-0.0118		-0.0572		0.0904		-0.0267		0.0003
26000	-0.0115		-0.0545		0.0867		-0.0256		0.0003
27000	-0.0112		-0.0520		0.0832		-0.0246		0.0002
28000	-0.0109		-0.0495		0.0799		-0.0236		0.0002
29000	-0.0106		-0.0473		0.0767		-0.0227		0.0002
30000	-0.0103		-0.0451		0.0737		-0.0218		0.0002
31000	-0.0101		-0.0430		0.0709		-0.0210		0.0002
32000	-0.0098		-0.0411		0.0681		-0.0202		0.0002
33000	-0.0096		-0.0392		0.0655		-0.0195		0.0001
34000	-0.0093		-0.0375		0.0631		-0.0187		0.0001
35000	-0.0091		-0.0358		0.0607		-0.0181		0.0001
36000	-0.0089		-0.0342		0.0585		-0.0174		0.0001
37000	-0.0087		-0.0327		0.0563		-0.0168		0.0001
38000	-0.0085		-0.0312		0.0543		-0.0162		0.0001
39000	-0.0083		-0.0299		0.0523		-0.0156		0.0001
40000	-0.0081		-0.0286		0.0504		-0.0151		0.0001
41000	-0.0079		-0.0273		0.0486		-0.0146		0.0001
42000	-0.0077		-0.0261		0.0469		-0.0141		0.0001
43000	-0.0075		-0.0250		0.0452		-0.0136		0.0001
44000	-0.0074		-0.0239		0.0436		-0.0132		0.0001
45000	-0.0072		-0.0229		0.0421		-0.0127		0.0001
46000	-0.0071		-0.0219		0.0407		-0.0123		0.0000
--------
46470	-0.0070		-0.0214		0.0400		-0.0121		0.0000
Final cycle: 46470
Neural net took 46470 feedforwards.
Neural net took 46469 back propagations.
Training succeeded.
Final weights:
Weight I1->O1 : -11.208702323788149
Weight I2->O1 : 1.8053328170656002
Weight I3->O1 : 11.604761253197408
Weight IB->O1 : -2.0175296640059672
